{"version":3,"sources":["./libs/core-data/src/lib/services/items/items.service.ts","./apps/client/src/app/navbar/navbar.component.ts","./apps/client/src/app/navbar/navbar.component.html","./libs/core-state/src/lib/core-state.module.ts","./libs/core-data/src/lib/services/stories/stories.service.ts","./apps/client/src/app/utils/date-util.ts","./libs/material/src/lib/material.module.ts","./apps/client/src/app/routing.module.ts","./libs/testing/src/index.ts","./apps/client/src/environments/environment.ts","./libs/core-data/src/lib/core-data.module.ts","./apps/client/src/app/home/home.component.ts","./apps/client/src/app/home/home.component.html","./libs/core-data/src/index.ts","./apps/client/src/main.ts","./apps/client/src/app/story-list/story-list.component.ts","./apps/client/src/app/story-list/story-list.component.html","./libs/testing/src/lib/testing.module.ts","./apps/client/src/app/app.component.ts","./apps/client/src/app/app.component.html","./apps/client/src/app/app.module.ts","./libs/material/src/index.ts","./libs/core-state/src/index.ts","./libs/testing/src/lib/mocks/items.mocks.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AAEH;AACH;AACF;;;AAKnC,MAAM,YAAY;IAEvB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAI,CAAC;IAE/C,KAAK,CAAC,GAAoB;QACxB,OAAO,GAAG,CAAC,IAAI,CACb,+DAAQ,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,qDAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CACrE,CAAC;IACJ,CAAC;IAED,OAAO,CAAC,EAAE;QACR,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,CAAC;IAC7D,CAAC;IAEO,MAAM,CAAC,KAAa;QAC1B,OAAO,GAAG,4DAAW,CAAC,WAAW,GAAG,KAAK,EAAE,CAAC;IAC9C,CAAC;;wEAhBU,YAAY;+FAAZ,YAAY,WAAZ,YAAY,mBAFX,MAAM;;;;;;;;;;;;;;;;;;;;;;;ACAb,MAAM,eAAe;IAE1B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;8EALU,eAAe;+FAAf,eAAe;QCP5B,iFAA6B;QAC3B,kFAAiB;QACf,uEAAoD;QAAA,sEAAW;QAAA,4DAAI;QACnE,qEAAgC;QAChC,uEAAyD;QAAA,sEAAW;QAAA,4DAAI;QACxE,uEAAyD;QAAA,sEAAW;QAAA,4DAAI;QACxE,uEAA0D;QAAA,yEAAa;QAAA,4DAAI;QAC7E,4DAAkB;QACpB,4DAAc;;;;;;;;;;;;;;ACPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;;AAE/C,MAAM,eAAe,GAAY,EAAE,CAAC;AAKpC,MAAM,eAAe;;8EAAf,eAAe;8FAAf,eAAe;kGAFjB,CAAC,4DAAY,EAAE,4DAAY,CAAC;mIAE1B,eAAe,cAFhB,4DAAY,EAAE,4DAAY;;;;;;;;;;;;;ACNtC;AAAA;AAAA;AAAA;AAAA;AAAkD;AACH;;;AAKxC,MAAM,cAAc;IACzB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;IAAG,CAAC;IAE9C,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAClE,CAAC;IAED,YAAY;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC,CAAC;IACnE,CAAC;IAED,WAAW;QACT,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAW,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IAClE,CAAC;IAEO,MAAM,CAAC,KAAa;QAC1B,OAAO,GAAG,4DAAW,CAAC,WAAW,GAAG,KAAK,OAAO,CAAC;IACnD,CAAC;;4EAjBU,cAAc;iGAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;ACLpB;AAAA;AAAA,MAAM,MAAM,GAAG;IACf,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;CACJ;AAEM,SAAS,gBAAgB,CAAC,QAAgB;IAC7C,MAAM,YAAY,GAAG,QAAQ,GAAG,IAAI;IACpC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;IACpC,MAAM,GAAG,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;IAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC9B,OAAO,GAAG,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;AACrC,CAAC;;;;;;;;;;;;;ACpBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2D;AACI;AACF;AACM;AACF;AACC;AACX;AACE;AACF;AACA;AACU;AACa;AACrB;AACE;AACE;AACJ;AACF;AACM;AACA;;AAyBtD,MAAM,cAAc;;4EAAd,cAAc;8FAAd,cAAc;kGArBvB,wEAAe;QACf,4EAAiB;QACjB,gFAAmB;QACnB,8EAAkB;QAClB,+EAAkB;QAClB,oEAAa;QACb,sEAAc;QACd,oEAAa;QACb,oEAAa;QACb,0EAAmB;QACnB,+EAAkB;QAClB,4FAAwB;QACxB,uEAAc;QACd,yEAAe;QACf,2EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;oIAGP,cAAc,cArBvB,wEAAe;QACf,4EAAiB;QACjB,gFAAmB;QACnB,8EAAkB;QAClB,+EAAkB;QAClB,oEAAa;QACb,sEAAc;QACd,oEAAa;QACb,oEAAa;QACb,0EAAmB;QACnB,+EAAkB;QAClB,4FAAwB;QACxB,uEAAc;QACd,yEAAe;QACf,2EAAgB;QAChB,uEAAc;QACd,qEAAa;QACb,2EAAgB;QAChB,2EAAgB;;;;;;;;;;;;;ACxCpB;AAAA;AAAA;AAAA;AAAA;AAAuD;AACD;;;AAEtD,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kEAAa,EAAE;IACtC,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kEAAa,EAAE;IACjD,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,kEAAa,EAAE;IACjD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,kEAAa,EAAE;IAClD,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,GAAG,EAAE;CAChC,CAAC;AAMK,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGAHf,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,aAAa,uFAFd,4DAAY;;;;;;;;;;;;;ACdxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqC;AACG;;;;;;;;;;;;;ACDxC;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;IACjB,WAAW,EAAE,wCAAwC;CACtD,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;;AAE/C,MAAM,cAAc,GAAY,EAAE,CAAC;AAKnC,MAAM,cAAc;;4EAAd,cAAc;6FAAd,cAAc;iGAFhB,CAAC,4DAAY,EAAE,4DAAY,CAAC;mIAE1B,cAAc,cAFf,4DAAY,EAAE,4DAAY;;;;;;;;;;;;;ACNtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACgB;;;;;;;;;ICO/D,mFAE6C;IAA5C,8XAA2C;IAC5C,4DAAgB;;;IADf,yGAA2C;;ADFrC,MAAM,aAAa;IASxB,YACU,cAA8B,EAC9B,MAAc;QADd,mBAAc,GAAd,cAAc,CAAgB;QAC9B,WAAM,GAAN,MAAM,CAAQ;QAVxB,YAAO,GAAa,EAAE,CAAC;QAEvB,uBAAkB,GAAa,EAAE,CAAC;QAGlC,aAAQ,GAAW,EAAE,CAAC;QACtB,oBAAe,GAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;QAKvC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAY,EAAE,EAAE;YACvC,IAAI,KAAK,YAAY,6DAAa,EAAE;gBAClC,QAAO,KAAK,CAAC,GAAG,EAAE;oBAChB,KAAK,cAAc;wBACjB,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;wBACrC,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,MAAM;oBACR,KAAK,cAAc;wBACjB,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;wBACrC,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,MAAM;oBACR,KAAK,eAAe;wBAClB,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;wBACvC,IAAI,CAAC,cAAc,EAAE,CAAC;wBACtB,MAAM;oBACR,KAAK,GAAG;wBACN,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;wBACrC,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,MAAM;oBACR;wBACE,IAAI,CAAC,eAAe,GAAG,aAAa,CAAC;wBACrC,IAAI,CAAC,aAAa,EAAE,CAAC;wBACrB,MAAM;iBACT;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;IAER,CAAC;IAED,iBAAiB,CAAC,GAAa,EAAE,QAAgB;QAC/C,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;YACtB,OAAO,CAAC,GAAG,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;QACzE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChC,CAAC;IAED,UAAU,CAAC,CAAC;QACV,IAAG,CAAC,CAAC,SAAS,KAAK,CAAC,EAAE;YACpB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YACtB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/E;aAAM;YACL,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC;YACpE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC;SAClE;IACH,CAAC;IAED,oBAAoB,CAAC,KAAa;QAChC,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YACnD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAClD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,aAAa;QACX,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,GAAG,EAAE,EAAE;YAClD,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;YACnB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC;IACL,CAAC;;0EAnFU,aAAa;6FAAb,aAAa;QCT1B,yEAAqC;QACjC,0EAAyB;QAAA,uDAAmB;QAAA,4DAAO;QACnD,mFAIgC;QAA5B,gJAAQ,sBAAkB,IAAC;QAC/B,4DAAgB;QACpB,4DAAM;QACN,6HAGgB;;QAXa,0DAAmB;QAAnB,oFAAmB;QAExC,0DAA0B;QAA1B,mHAA0B;QAOhC,0DAA+B;QAA/B,+FAA+B;;;;;;;;;;;;;;ACVjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACiC;AACN;;;;;;;;;;;;;;;;;;;ACFnB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB;KACrB,eAAe,CAAC,yDAAS,CAAC;KAC1B,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACZtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACtC;AACP;AACgB;;;;;;;;ICHtD,yEAAmD;IAC/C,yEAA2B;IAC/B,4DAAM;;;IAGJ,8EAA4C;IAC3C,kFAAiB;IAChB,oFAAoC;IACnC,uEAA8D;IAC9D,0EAA0B;IACzB,uDACD;IAAA,4DAAO;IAAA,4DAAI;IACZ,4DAAiB;IACjB,yEAAqC;IACpC,8EAAgD;IAAA,iEAAM;IAAA,4DAAW;IACjE,2EAAyB;IAAA,wDAAW;IAAA,4DAAO;IAC3C,gFAAoD;IAAA,oEAAQ;IAAA,4DAAW;IACvE,4EAAyB;IAAA,wDAAc;IAAA,4DAAO;IAC9C,gFAAmD;IAAA,mEAAO;IAAA,4DAAW;IACrE,4EAAyB;IAAA,wDAAqB;IAAA,4DAAO;IACrD,gFAAgD;IAAA,uEAAW;IAAA,4DAAW;IACtE,4EAAyB;IAAA,wDAAsB;IAAA,4DAAO;IACvD,4DAAM;IACN,sEACM;IACP,4DAAkB;IACnB,4DAAW;;;;IAlBc,0DAAuB;IAAvB,gKAAuB;IAE5C,0DACD;IADC,yFACD;IAIyB,0DAAW;IAAX,2EAAW;IAEX,0DAAc;IAAd,8EAAc;IAEd,0DAAqB;IAArB,4FAAqB;IAErB,0DAAsB;IAAtB,6FAAsB;;;IAMlD,8EAA6C;IAC5C,0EAA0B;IACzB,mHACD;IAAA,4DAAO;IACP,gEAAK;IACL,0EAA0B;IACzB,qFACD;IAAA,4DAAO;IACR,4DAAW;;;IA/BZ,mFAAiF;IAChF,yIAqBW;IACX,wIAQW;IACZ,4DAAgB;;;IA/BJ,0DAAU;IAAV,yEAAU;IAsBV,0DAAW;IAAX,0EAAW;;ADjBjB,MAAM,kBAAkB;IAI7B,YAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;IAAK,CAAC;IAEpD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,+CAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;IACrE,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAG,OAAO,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE;YAC/C,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,+CAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC;SACpE;IACH,CAAC;IAED,eAAe,CAAC,IAAI;QAClB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;IACpB,CAAC;IAED,OAAO,CAAC,IAAI;QACV,OAAO,yEAAgB,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,WAAW,CAAC,IAAI;QACd,IAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAC;YAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC;SAC3B;aAAM;YACL,OAAO,CAAC,CAAC;SACV;IACH,CAAC;IAED,MAAM,CAAC,IAAI;QACT,IAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAC;YAC5B,OAAO,IAAI,CAAC,GAAG,CAAC;SACjB;aAAM;YACL,OAAO,IAAI,CAAC;SACb;IACH,CAAC;IAED,aAAa,CAAC,GAAoB;QAChC,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACtC,CAAC;;oFA1CU,kBAAkB;kGAAlB,kBAAkB;QCV/B,8GAEM;;QACN,2EAAU;QACT,kIAgCgB;;QACjB,4DAAW;;QArCU,mJAA4B;QAIS,0DAAsB;QAAtB,qJAAsB;;;;;;;;;;;;;;ACHhF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACO;;AAE/C,MAAM,aAAa,GAAY,EAAE,CAAC;AAKlC,MAAM,aAAa;;0EAAb,aAAa;4FAAb,aAAa;gGAFf,CAAC,4DAAY,EAAE,4DAAY,CAAC;mIAE1B,aAAa,cAFd,4DAAY,EAAE,4DAAY;;;;;;;;;;;;;;;;;;;;;ACA/B,MAAM,YAAY;IACvB,gBAAe,CAAC;;wEADL,YAAY;4FAAZ,YAAY;QCPzB,uEAAuB;QACvB,yEAAuB;QACnB,2EAA+B;QACnC,4DAAM;;;;;;;;;;;;;;ACHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwD;AAEA;AACE;AACqB;AAChC;AACE;AACH;AACC;AACO;AACM;AACX;AACsB;AACZ;;AAuBpD,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FADb,EAAE,YAjBJ;YACP,4FAAuB;YACvB,uEAAa;YACb,4DAAc;YACd,8DAAe;YACf,qEAAgB;YAChB,qEAAgB;YAChB,2DAAc;YACd,8DAAa;YACb,0DAAa;SACd;oIAUU,SAAS,mBARlB,2DAAY;QACZ,kEAAa;QACb,wEAAe;QACf,oFAAkB,aAdlB,4FAAuB;QACvB,uEAAa;QACb,4DAAc;QACd,8DAAe;QACf,qEAAgB;QAChB,qEAAgB;QAChB,2DAAc;QACd,8DAAa;QACb,0DAAa;;;;;;;;;;;;;ACzBjB;AAAA;AAAA;AAAA;AAAsC;;;;;;;;;;;;;ACAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAwC;;;;;;;;;;;;;ACCxC;AAAA;AAAA;AAAA;AAAA;AAA0B;AAEnB,MAAM,kBAAkB,GAAG;IAChC,KAAK,EAAE,GAAG,EAAE,CAAC,+CAAE,CAAC,EAAE,CAAC;IACnB,OAAO,EAAE,GAAG,EAAE,CAAC,+CAAE,mBAAM,QAAQ,EAAG;CACnC,CAAC;AAEK,MAAM,QAAQ,GAAG;IACtB,EAAE,EAAE,GAAG;IACP,KAAK,EAAE,MAAM;IACb,EAAE,EAAE,MAAM;IACV,IAAI,EAAE,UAAU;IAChB,IAAI,EAAE,OAAO;IACb,IAAI,EAAE,EAAE;IACR,IAAI,EAAE,EAAE;CACT,CAAC;AAEK,MAAM,aAAa,GAAG;IAC3B,EAAE,EAAE,IAAI;IACR,KAAK,EAAE,WAAW;IAClB,WAAW,EAAE,WAAW;CACzB,CAAC;;;;;;;;;;;;ACtBF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '@env/environment';\nimport { forkJoin, Observable } from 'rxjs';\nimport { mergeMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  items(ids: Observable<any>) {\n    return ids.pipe(\n      mergeMap((obsIds) => forkJoin(obsIds.map((id) => this.getItem(id)))),\n    );\n  }\n\n  getItem(id): Observable<any> {\n    return this.httpClient.get(this.getUrl(`item/${id}.json`));\n  }\n\n  private getUrl(model: string) {\n    return `${environment.apiEndpoint}${model}`;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hn-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row>\n    <a class=\"nav-link title\" routerLink=\"/\" mat-button>Hacker News</a>\n    <span class=\"nav-spacer\"></span>\n    <a class=\"nav-link\" routerLink=\"/top-stories\" mat-button>Top Stories</a>\n    <a class=\"nav-link\" routerLink=\"/new-stories\" mat-button>New Stories</a>\n    <a class=\"nav-link\" routerLink=\"/best-stories\" mat-button>Editor's Pick</a>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const coreStateRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n})\nexport class CoreStateModule {}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '@env/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StoriesService {\n  constructor(private httpClient: HttpClient) {}\n\n  topStoryIds() {\n    return this.httpClient.get<number[]>(this.getUrl('topstories'));\n  }\n\n  bestStoryIds() {\n    return this.httpClient.get<number[]>(this.getUrl('beststories'));\n  }\n\n  newStoryIds() {\n    return this.httpClient.get<number[]>(this.getUrl('newstories'));\n  }\n\n  private getUrl(model: string) {\n    return `${environment.apiEndpoint}${model}.json`;\n  }\n}\n","const months = [\n'Jan',\n'Feb',\n'Mar',\n'Apr',\n'May',\n'Jun',\n'Jul',\n'Aug',\n'Sep',\n'Oct',\n'Nov',\n'Dec'\n]\n\nexport function getFormattedDate(unixDate: number) {\n    const milliseconds = unixDate * 1000\n    const date = new Date(milliseconds);\n    const day = date.getDate();\n    const month = date.getMonth();\n    return day + ' ' + months[month];\n}\n","import { NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n@NgModule({\n  exports: [\n    MatButtonModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatExpansionModule,\n    MatFormFieldModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n  ],\n})\nexport class MaterialModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'top-stories', component: HomeComponent },\n  { path: 'new-stories', component: HomeComponent },\n  { path: 'best-stories', component: HomeComponent },\n  { path: '**', redirectTo: '/' },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class RoutingModule { }\n","export * from './lib/testing.module';\nexport * from './lib/mocks/items.mocks';\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndpoint: 'https://hacker-news.firebaseio.com/v0/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const coreDataRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n})\nexport class CoreDataModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { StoriesService } from '@hn/core-data';\nimport { Router, Event, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'hn-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  stories: number[] = [];\n  storyChunks: number[][];\n  currentPageStories: number[] = [];\n  currentPageName: string;\n\n  pageSize: number = 10;\n  pageSizeOptions: number[] = [10, 20, 50];\n\n  constructor(\n    private storiesService: StoriesService,\n    private router: Router,) {\n    router.events.subscribe((event: Event) => {\n      if (event instanceof NavigationEnd) {\n        switch(event.url) {\n          case \"/top-stories\":\n            this.currentPageName = \"Top Stories\";\n            this.getTopStories();\n            break;\n          case \"/new-stories\":\n            this.currentPageName = \"New Stories\";\n            this.getNewStories();\n            break;\n          case \"/best-stories\":\n            this.currentPageName = \"Editor's Pick\";\n            this.getBestStories();\n            break;\n          case \"/\":\n            this.currentPageName = \"Top Stories\";\n            this.getTopStories();\n            break;\n          default:\n            this.currentPageName = \"Top Stories\";\n            this.getTopStories();\n            break;\n        }\n      }\n    });\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n  getIdsFromStories(ids: number[], pageSize: number): number[][] {\n    return ids.map((e, i) => {\n      return i % pageSize === 0 ? this.stories.slice(i, i + pageSize) : null;\n    }).filter(e => { return e; });\n  }\n\n  handlePage(e) {\n    if(e.pageIndex === 0) {\n      this.storyChunks = [];\n      this.currentPageStories = this.getIdsFromStories(this.stories, e.pageSize)[0];\n    } else {\n      this.storyChunks = this.getIdsFromStories(this.stories, e.pageSize);\n      this.currentPageStories = this.getStoryChunkAtIndex(e.pageIndex);\n    }\n  }\n\n  getStoryChunkAtIndex(index: number) {\n    return this.storyChunks[index];\n  }\n\n  getBestStories() {\n    this.storiesService.bestStoryIds().subscribe((ids) => {\n      this.stories = ids;\n      this.currentPageStories = this.getIdsFromStories(ids, 10)[0];\n    });\n  }\n\n  getNewStories() {\n    this.storiesService.newStoryIds().subscribe((ids) => {\n      this.stories = ids;\n      this.currentPageStories = this.getIdsFromStories(ids, 10)[0];\n    });\n  }\n\n  getTopStories() {\n    this.storiesService.topStoryIds().subscribe((ids) => {\n      this.stories = ids;\n      this.currentPageStories = this.getIdsFromStories(ids, 10)[0];\n    });\n  }\n}\n","<div class=\"flex-row header-wrapper\">\n    <span class=\"page-title\">{{currentPageName}}</span>\n    <mat-paginator \n        [length]=\"stories?.length\"\n        [pageSize]=\"pageSize\"\n        [pageSizeOptions]=\"pageSizeOptions\"\n        (page)=\"handlePage($event)\">\n    </mat-paginator>  \n</div>  \n<hn-story-list \n\t*ngIf=\"currentPageStories.length\" \n\t[(currentPageStories)]=\"currentPageStories\">\n</hn-story-list>\n","export * from './lib/core-data.module';\nexport { StoriesService } from './lib/services/stories/stories.service';\nexport { ItemsService } from './lib/services/items/items.service';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import { Component, Input, OnInit, OnChanges, SimpleChanges } from '@angular/core';\nimport { ItemsService } from '@hn/core-data';\nimport { Observable, of } from 'rxjs';\nimport { getFormattedDate } from '../utils/date-util';\n\n@Component({\n  selector: 'hn-story-list',\n  templateUrl: './story-list.component.html',\n  styleUrls: ['./story-list.component.scss']\n})\nexport class StoryListComponent implements OnInit, OnChanges {\n  @Input() currentPageStories: number[];\n\n  storyItems$: Observable<any>;\n  constructor(private itemsService: ItemsService,) { }\n\n  ngOnInit(): void {\n    this.storyItems$ = this.getStoryItems(of(this.currentPageStories));\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if(changes.hasOwnProperty('currentPageStories')) {\n      this.storyItems$ = this.getStoryItems(of(this.currentPageStories));\n    }\n  }\n\n  showUserDetails(user) {\n    console.log(user);\n  }\n\n  getTime(time) {\n    return getFormattedDate(time);\n  }\n\n  getComments(item) {\n    if(item.hasOwnProperty('kids')){\n      return (item.kids).length;\n    } else {\n      return 0;\n    }\n  }\n\n  getUrl(item) {\n    if(item.hasOwnProperty('url')){\n      return item.url;\n    } else {\n      return null;\n    }\n  }\n\n  getStoryItems(ids: Observable<any>) {\n    return this.itemsService.items(ids);\n  }\n}\n","<div class=\"loader\" *ngIf=\"!(storyItems$ | async)\">\n    <mat-spinner></mat-spinner>\n</div>\n<mat-list>\n\t<mat-list-item class=\"mat-elevation-z2\" *ngFor=\"let item of storyItems$ | async\">\n\t\t<mat-card *ngIf=\"item\" class=\"example-card\">\n\t\t\t<mat-card-header>\n\t\t\t\t<mat-card-title class=\"story-title\">\n\t\t\t\t\t<a class=\"story-link\" href=\"{{getUrl(item)}}\" target=\"_balnk\">\n\t\t\t\t\t<span class=\"story-title\">\n\t\t\t\t\t\t{{item.title}}\n\t\t\t\t\t</span></a>\n\t\t\t\t</mat-card-title>\n\t\t\t\t<div class=\"flex-row story-metadata\">\n\t\t\t\t\t<mat-icon aria-hidden=\"false\" aria-label=\"user\">person</mat-icon>\n\t\t\t\t\t<span class=\"story-user\">{{item.by}}</span>\n\t\t\t\t\t<mat-icon aria-hidden=\"false\" aria-label=\"favorite\">favorite</mat-icon>\n\t\t\t\t\t<span class=\"story-user\">{{item.score}}</span>\n\t\t\t\t\t<mat-icon aria-hidden=\"false\" aria-label=\"comment\">comment</mat-icon>\n\t\t\t\t\t<span class=\"story-user\">{{getComments(item)}}</span>\n\t\t\t\t\t<mat-icon aria-hidden=\"false\" aria-label=\"time\">watch_later</mat-icon>\n\t\t\t\t\t<span class=\"story-user\">{{getTime(item.time)}}</span>\n\t\t\t\t</div>\n\t\t\t\t<div class=\"flex-row\">\n\t\t\t\t</div>\n\t\t\t</mat-card-header>\n\t\t</mat-card>\n\t\t<mat-card *ngIf=\"!item\" class=\"example-card\">\n\t\t\t<span class=\"story-title\">\n\t\t\t\tOops! something went wrong.. Failed to load the story.\n\t\t\t</span>\n\t\t\t<br/>\n\t\t\t<span class=\"story-title\">\n\t\t\t\tPlease try again later..\n\t\t\t</span>\n\t\t</mat-card>\n\t</mat-list-item>\n</mat-list>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Route } from '@angular/router';\n\nexport const testingRoutes: Route[] = [];\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n})\nexport class TestingModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'hn-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent {\n  constructor() {}\n}\n","<hn-navbar></hn-navbar>\n<div class=\"container\">\n    <router-outlet></router-outlet>\n</div>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { CoreDataModule } from '@hn/core-data';\nimport { CoreStateModule } from '@hn/core-state';\nimport { MaterialModule } from '@hn/material';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { RoutingModule } from './routing.module';\nimport { StoryListComponent } from './story-list/story-list.component';\nimport { TestingModule, testingRoutes } from '@hn/testing';\n\n@NgModule({\n  imports: [\n    BrowserAnimationsModule,\n    BrowserModule,\n    CoreDataModule,\n    CoreStateModule,\n    FlexLayoutModule,\n    HttpClientModule,\n    MaterialModule,\n    RoutingModule,\n    TestingModule,\n  ],\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    StoryListComponent,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","export * from './lib/material.module';\n","export * from './lib/core-state.module';\n","import { Item } from '@hn/api-interfaces';\nimport { of } from 'rxjs';\n\nexport const mockWidgetsService = {\n  items: () => of([]),\n  getItem: () => of({ ...mockItem }),\n};\n\nexport const mockItem = {\n  id: 111,\n  title: \"mock\", \n  by: \"mock\",\n  time: 1617801950,\n  type: \"story\",\n  poll: 30,\n  kids: 20,\n};\n\nexport const mockEmptyItem = {\n  id: null,\n  title: 'mockEmpty',\n  description: 'mockEmpty',\n};","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}